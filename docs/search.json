[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Paulo Oliveira",
    "section": "",
    "text": "Aqui, eu listo minha formação acadêmica e a minha experiência profissional. Desde a graduação venho trabalhando com análise de dados e econometria. Inicialmente, a minha linguagem de trabalho era o Stata. Contudo, a partir de 2014 comecei a usar o R como linguangem principal. Em algumas competições do Kaggle, também trabalhei com o Python.\n\nEducação \n\n\n\n2009-2011\n\n\n\nUniversidade Federal do Ceará - UFC\n\n\nMestrado em economia.\n\n\n\n\n\n2004-2008\n\n\n\nUniversidade Federal do Ceará - UFC\n\n\nGraduação em ciências econômicas.\n\n\n\n\nTrabalho \n\n\n\n2023-Atual\n\n\n\nMinistério do Desenvolvimento, Indústria, Comércio e Serviços - MDICS\n\n\nCargo: Analista de Comércio Exterior\n\n\n\n\n\n2019-2022\n\n\n\nMinistério da Economia - ME\n\n\nCargo: Analista de Comércio Exterior\n\n\n\n\n\n2013-2018\n\n\n\nMinistério do Desenvolvimento Indústria e Comércio Exterior - MDIC\n\n\nCargo: Analista de Comércio Exterior\n\n\n\n\n\n2011-2013\n\n\n\nDefensoria Pública da União - DPU\n\n\nCargo: Economista\n\n\n\n\nCursos Ministrados \n\n\n\n2018\n\n\n\nCurso de Ciência de Dados com o R\n\n\nLocal: IBPAD.\n\n\n\n\n\n2017\n\n\n\nCurso de Ciência de Dados com o R\n\n\nLocal: IBPAD.\n\n\n\n\n\n2016\n\n\n\nCurso de Análise de Dados de Comércio Exterior com R (Módulo 2)\n\n\nLocal: MDIC.\n\n\n\n\nProjetos\n\nPacote em R para simulações utilizando o modelo de comércio desenvolvido em Caliendo e Parro (2015). cp2015\nHtmlwidget para R para utilização da biblioteca D3plus (v1). D3plusR\nLivro: Ciência de Dados com R - Introdução com Saulo Guerra, Robert MacDonnell e Sillas Gonzaga."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Paulo Oliveira",
    "section": "",
    "text": "Eu sou o Paulo. Minha formação é em economia. Minha área de interesse é análise de dados em geral, como simulação com base em modelos econômicos, econometria e aprendizado de máquina."
  },
  {
    "objectID": "blog.html",
    "href": "blog.html",
    "title": "Blog",
    "section": "",
    "text": "Predições de Resultados de Futebol\n\n\nVamos documentar uma abordagem de predição de partidas de futebol utilizando modelos de regressões de Poisson.\n\n\n\n\nR\n\n\nModelos preditivos\n\n\n \n\n\n\n\n20 de dez. de 2022\n\n\n6 minutos\n\n\n\n\n\n\nNenhum item correspondente"
  },
  {
    "objectID": "posts/teste.html",
    "href": "posts/teste.html",
    "title": "teste",
    "section": "",
    "text": "3 + 43\n\n[1] 46"
  },
  {
    "objectID": "posts/hello-world.html",
    "href": "posts/hello-world.html",
    "title": "Hello World",
    "section": "",
    "text": "3 + 43\n\n[1] 46\n\n\n\nmtcars |>\n  ggplot2::ggplot() +\n  ggplot2::aes(y = mpg, x = hp) +\n  ggplot2::geom_point()"
  },
  {
    "objectID": "posts/teste/index.html",
    "href": "posts/teste/index.html",
    "title": "Hello World",
    "section": "",
    "text": "2 + 2\n\n[1] 4\n\n\n\nmtcars |>\n  ggplot2::ggplot() +\n  ggplot2::aes(x = hp, y = mpg) +\n  ggplot2::geom_point()\n\n\n\nggplot2::ggsave(filename = \"teste.png\")\n\nSaving 7 x 5 in image\n\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Integer bibendum, massa vitae fermentum ultrices, odio magna pretium nunc, sit amet euismod est justo viverra mauris. Proin vestibulum euismod nulla, sed ornare magna porta at. Etiam in elit felis. Morbi condimentum, odio ut fringilla accumsan, elit arcu faucibus lorem, ac mattis odio mi non sem. Morbi laoreet neque eu mi lobortis, nec rhoncus elit feugiat. Donec blandit lacinia arcu sit amet rhoncus. Vivamus pharetra egestas dolor ac scelerisque. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nam vestibulum augue ut hendrerit dapibus. Morbi at sodales eros. Phasellus gravida ut turpis at faucibus. Sed efficitur vulputate mattis. Aenean laoreet lorem in libero pulvinar, eget bibendum lacus dictum. Aenean eget sem in metus malesuada euismod.\nEtiam et ex mi. In finibus tristique laoreet. Suspendisse commodo sem vitae placerat consequat. Vivamus maximus auctor eros ac finibus. Duis maximus a nisi ut rhoncus. Maecenas rutrum, erat ac consectetur rhoncus, nisl sapien ullamcorper tortor, nec egestas lectus leo non magna. Aliquam facilisis ultrices lacus sed euismod. Maecenas ultricies vestibulum porttitor.\nEtiam tristique mollis quam, sit amet venenatis nibh interdum ac. Donec non urna lectus. Aliquam erat volutpat. Suspendisse pretium vel eros ac ullamcorper. Donec ut pulvinar enim, quis bibendum massa. Curabitur ornare elementum sagittis. Ut sagittis sem quis magna facilisis, eu fringilla ante sollicitudin. Fusce purus dolor, rutrum in ultricies varius, ultrices ut quam. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae;\nEtiam euismod vehicula sapien, vel ullamcorper nisl congue vel. Nam rutrum lectus ac consequat tincidunt. Etiam consectetur tortor massa, id hendrerit ex lacinia sit amet. Praesent turpis diam, viverra eu maximus non, mollis sed mauris. In maximus in ante quis consequat. In vel felis magna. Suspendisse tristique mi sed suscipit maximus.\nPellentesque vehicula eget ante ac consectetur. Quisque sed blandit nibh. Nullam consectetur vulputate pulvinar. Aliquam lacinia eros sit amet mauris lobortis, ac hendrerit est ultricies. Ut dapibus libero eros, et aliquet leo laoreet vitae. Aenean congue euismod tincidunt. Sed faucibus, mauris ut maximus tempor, lectus nisi sollicitudin tortor, et tristique ligula lectus ultrices ex. Vestibulum posuere lorem nec felis tincidunt consectetur. Nulla libero nunc, scelerisque vitae facilisis id, aliquet vel tellus. Aliquam cursus ipsum et viverra congue. Curabitur at commodo quam, a molestie risus. Nulla pharetra dolor nisl, non tempus quam porttitor eu.\n\n2 + 2\n\n[1] 4"
  },
  {
    "objectID": "index.html#projetos",
    "href": "index.html#projetos",
    "title": "Olá,",
    "section": "Projetos",
    "text": "Projetos\n\nPacote em R para simulações utilizando o modelo de comércio desenvolvido em Caliendo e Parro (2015). cp2015\nHtmlwidget para R para utilização da biblioteca D3plus (v1). D3plusR\nLivro: Ciência de Dados com R - Introdução com Saulo Guerra, Robert MacDonnell e Sillas Gonzaga."
  },
  {
    "objectID": "index.html#projetoss",
    "href": "index.html#projetoss",
    "title": "Paulo Oliveira",
    "section": "Projetoss",
    "text": "Projetoss\n\nPacote em R para simulações utilizando o modelo de comércio desenvolvido em Caliendo e Parro (2015). cp2015\nHtmlwidget para R para utilização da biblioteca D3plus (v1). D3plusR\nLivro: Ciência de Dados com R - Introdução com Saulo Guerra, Robert MacDonnell e Sillas Gonzaga."
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html",
    "href": "posts/2022-12-20-bipoisson/index.html",
    "title": "Predições de Resultados de Futebol",
    "section": "",
    "text": "Durante a Copa do Mundo de futebol de 2022, o interesse por predições de resultados de futebol aumentou consideravelmente. Neste sentido, este post irá demonstrar uma abordagem simples que pode gerar resultados razoáveis. O modelo utilizado neste post é baseado no trabalho The Methodology of Red, a Football Forecasting Model from theUniversity of Reading de J. James Reade.\nBasicamente, o autor utiliza um modelo de Poisson para prever as probabilidades de gols marcados por cada time. A partir dessas probabilidades, é possível estimar também a chance de vitória, empate ou derrota de cada time. Como variáveis, iremos utilizar o Elo Rating de cada time e uma variável que indica se o jogo ocorreu em campo neutro ou não. O modelo a ser estimado para cada time é: \\[ Y_{ijt}^n = \\exp\\left(\\alpha^n + \\beta_1^n R_{it} + \\beta_2^n R_{jt} + \\beta_3^n N_{ijt} \\right) \\varepsilon_{ijt}^n,~~~~ n \\in \\{time1, time2\\}, \\] em que \\(Y_{ijt}^n\\) representa o número de gols marcados pelo time \\(n\\) (time 1 ou time2) em uma partida entre o time \\(i\\) (time 1) e o time \\(j\\) (time 2) na data \\(t\\). As variáveis \\(R_{it}\\) e \\(R_{jt}\\) representam, respectivamente, os ratings dos times \\(i\\) e \\(j\\) antes da partida de data \\(t\\). Por último, a variável \\(N_{ijt}\\) é um variável dummy que indica se a partida foi realizada em um campo neutro. Reforçando, iremos estimar dois modelos: um para o time 1 e outro para o time 2."
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#dados",
    "href": "posts/2022-12-20-bipoisson/index.html#dados",
    "title": "Predições de Resultados de Futebol",
    "section": "Dados",
    "text": "Dados\nSerão utilizados dados de partidas entre seleções que estão disponíveis neste repositório: martj42/international_results. A primeira partida disponível na base data de 30/11/1872.\n\ndata <- read_csv(\n  file = \"https://github.com/martj42/international_results/raw/master/results.csv\",\n  show_col_types = FALSE\n)\n\n# Remove partidas sem resultados e ajusta os nomes das variáveis de home e away\n# para team1 e team2\ndata <- data |>\n  filter(!is.na(home_score)) |>\n  rename(\n    team1 = home_team,\n    team2 = away_team,\n    team1_score = home_score,\n    team2_score = away_score\n  )\n\nhead(data)\n\n# A tibble: 6 × 9\n  date       team1    team2    team1_score team2…¹ tourn…² city  country neutral\n  <date>     <chr>    <chr>          <dbl>   <dbl> <chr>   <chr> <chr>   <lgl>  \n1 1872-11-30 Scotland England            0       0 Friend… Glas… Scotla… FALSE  \n2 1873-03-08 England  Scotland           4       2 Friend… Lond… England FALSE  \n3 1874-03-07 Scotland England            2       1 Friend… Glas… Scotla… FALSE  \n4 1875-03-06 England  Scotland           2       2 Friend… Lond… England FALSE  \n5 1876-03-04 Scotland England            3       0 Friend… Glas… Scotla… FALSE  \n6 1876-03-25 Scotland Wales              4       0 Friend… Glas… Scotla… FALSE  \n# … with abbreviated variable names ¹​team2_score, ²​tournament"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#elo-rating",
    "href": "posts/2022-12-20-bipoisson/index.html#elo-rating",
    "title": "Predições de Resultados de Futebol",
    "section": "Elo Rating",
    "text": "Elo Rating\nO código abaixo irá calcular os scores (rating) do times utilizando o pacote EloRating. A fórmula de atualização dos scores depende um fator atualização \\(k\\). Quanto maior esse valor, maior será o tamanho do ajuste dos scores dos times envolvidos em cada partida. Aqui, será utilizado o valor 20 igual ao adotado por J. James Reade.\n\n# Determina o vencendor e o perdedor\n# Em caso de empate, não importa a ordem, mas é preciso indicar que é um empate\ndata <- data |>\n  mutate(\n    winner = case_when(\n      team1_score >= team2_score ~ team1,\n      TRUE ~ team2\n    ),\n    loser = case_when(\n      team1_score < team2_score ~ team1,\n      TRUE ~ team2\n    ),\n    draw = team1_score == team2_score,\n    match_id = 1:n()\n  )\n\n# Calcula os ratings\nelo_fit <- elo.seq(\n  winner = data$winner,\n  loser = data$loser,\n  Date = data$date,\n  draw = data$draw,\n  k = 20\n)\n\n# Adiciona os ratings ao data.frame.\n# Note que utilizamos o rate do dia anterior à partida para que seja refletido\n# o score de cada time antes da partida.\ndata <- data |>\n  mutate(\n    team1_elo = extract_elo(\n      eloobject = elo_fit,\n      extractdate = pmax(min(elo_fit$truedates), date - 1),\n      IDs = team1\n    ),\n    team2_elo = extract_elo(\n      eloobject = elo_fit,\n      extractdate = pmax(min(elo_fit$truedates), date - 1),\n      IDs = team2\n    )\n  )"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#resultados-por-time",
    "href": "posts/2022-12-20-bipoisson/index.html#resultados-por-time",
    "title": "Predição de resultados de futebol - Parte 1",
    "section": "Resultados por time",
    "text": "Resultados por time\n\nresults_by_team <- bind_rows(\n  data %>%\n    rename(\n      team = home_team,\n      opponent_team = away_team,\n      score = home_score,\n      opponent_score = away_score,\n      elo = home_team_elo,\n      opponent_elo = away_team_elo\n    ) %>%\n    mutate(\n      team1 = TRUE,\n      diff_score = score - opponent_score\n    ),\n  data %>%\n    rename(\n      team = away_team,\n      opponent_team = home_team,\n      score= away_score,\n      opponent_score = home_score,\n      elo = away_team_elo,\n      opponent_elo = home_team_elo\n    ) %>%\n    mutate(\n      team1 = FALSE,\n      diff_score = score - opponent_score\n    )\n) %>%\n  arrange(date, team)"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#features",
    "href": "posts/2022-12-20-bipoisson/index.html#features",
    "title": "Predição de resultados de futebol - Parte 1",
    "section": "Features",
    "text": "Features\n\nfeatures <- results_by_team %>%\n  group_by(team) %>%\n  mutate(\n    ht_lag_elo = dplyr::lag(elo, n = 1),\n    # ht_elo_avg_20 = roll_mean(\n    #   x = ht_lag_elo,\n    #   n = 20,\n    #   fill = 1000,\n    #   align = \"right\"\n    # ),\n    ht_score_avg_20 = roll_mean(\n      x = dplyr::lag(score, n = 1),\n      n = 20,\n      fill = 0,\n      align = \"right\"\n    ),\n    ht_opp_score_avg_20 = roll_mean(\n      x = dplyr::lag(opponent_score, n = 1),\n      n = 20,\n      fill = 0,\n      align = \"right\"\n    )\n  ) %>%\n  group_by(opponent_team) %>%\n  mutate(\n    at_lag_elo = dplyr::lag(opponent_elo, n = 1),\n    # at_elo_avg_20 = roll_mean(\n    #   x = at_lag_elo,\n    #   n = 20,\n    #   fill = 1000,\n    #   align = \"right\"\n    # ),\n    at_score_avg_20 = roll_mean(\n      x = dplyr::lag(opponent_score, n = 1),\n      n = 20,\n      fill = 0,\n      align = \"right\"\n    ),\n    at_opp_score_avg_20 = roll_mean(\n      x = dplyr::lag(score, n = 1),\n      n = 20,\n      fill = 0,\n      align = \"right\"\n    )\n  ) %>%\n  ungroup() %>%\n  mutate(\n    elo_relative = ht_lag_elo / at_lag_elo\n  ) %>%\n  filter(team1) %>%\n  select(match_id, contains(\"lag\"), elo_relative, contains(\"avg\"))"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#dados-para-o-modelo",
    "href": "posts/2022-12-20-bipoisson/index.html#dados-para-o-modelo",
    "title": "Predição de resultados de futebol - Parte 1",
    "section": "Dados para o modelo",
    "text": "Dados para o modelo\n\ndata <- data %>%\n  mutate(\n    target = case_when(\n      home_score > away_score ~ \"home\",\n      home_score < away_score ~ \"away\",\n      home_score == away_score ~ \"draw\"\n    ),\n    target = factor(target, levels = c(\"home\", \"draw\", \"away\")),\n    friendly = tournament == \"Friendly\",\n    world_cup = tournament == \"FIFA World Cup\"\n  ) %>%\n  select(\n    match_id, date, home_team, away_team, target, neutral, friendly, tournament,\n    world_cup\n  ) %>%\n  dplyr::left_join(\n    y = features,\n    by = \"match_id\"\n  )"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#treino-validação-e-teste",
    "href": "posts/2022-12-20-bipoisson/index.html#treino-validação-e-teste",
    "title": "Predições de Resultados de Futebol",
    "section": "Treino, validação e teste",
    "text": "Treino, validação e teste\nComo não vamos realizar nenhuma seleção de hiperparâmetros, já que o modelo é bastante simples, iremos dividir os dados apenas em dois conjuntos: treino e teste.\n\ndata <- data |>\n  mutate(friendly = tournament == \"Friendly\") |>\n  filter(date >= as.Date(\"1930-01-01\"))\n\n# Split - Treino e Teste\ntrain_test <- initial_time_split(data, prop = 0.8)\ntrain <- training(train_test)\ntest <- testing(train_test)"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#workflow",
    "href": "posts/2022-12-20-bipoisson/index.html#workflow",
    "title": "Predição de resultados de futebol - Parte 1",
    "section": "Workflow",
    "text": "Workflow\n\npreproc <- recipe(target ~ ., data = train_full) %>%\n  step_rm(match_id, date, tournament)\n\nmodel <- boost_tree(\n  mode = \"classification\",\n  learn_rate = 0.01,\n  mtry = tune(),\n  trees = tune(),\n  tree_depth = tune(),\n  sample_size = tune()\n) %>%\n  set_engine(engine = \"lightgbm\", num_threads = 16, count = FALSE)\n\nwflow <- workflow(preproc, model)"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#fit",
    "href": "posts/2022-12-20-bipoisson/index.html#fit",
    "title": "Predição de resultados de futebol - Parte 1",
    "section": "Fit",
    "text": "Fit\n\ntune_grid(\n  object = wflow,\n  resamples = train_valid,\n  metrics = metric_set(mn_log_loss)\n) %>%\n  show_best()\n\ni Creating pre-processing data to finalize unknown parameter: mtry\n\n\n# A tibble: 5 × 9\n   mtry trees tree_depth .metric     .estimator  mean     n std_err .config     \n  <int> <int>      <int> <chr>       <chr>      <dbl> <int>   <dbl> <chr>       \n1     2  1102          2 mn_log_loss multiclass 0.918     1      NA Preprocesso…\n2     1    15          4 mn_log_loss multiclass 0.932     1      NA Preprocesso…\n3     4   241         13 mn_log_loss multiclass 0.941     1      NA Preprocesso…\n4     4   484         10 mn_log_loss multiclass 0.976     1      NA Preprocesso…\n5     5   628         12 mn_log_loss multiclass 0.999     1      NA Preprocesso…"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#grid-search",
    "href": "posts/2022-12-20-bipoisson/index.html#grid-search",
    "title": "Predição de resultados de futebol - Parte 1",
    "section": "Grid Search",
    "text": "Grid Search\n\nset.seed(32)\n\nparam_grid <- expand.grid(\n  mtry = c(0.1, 0.5, 0.9),\n  trees = seq(100, 1000, 100),\n  tree_depth = c(2, 4, 6),\n  sample_size = c(0.1, 0.5, 0.9)\n)\n\nres_grid <- tune_grid(\n  object = wflow,\n  resamples = train_valid,\n  metrics = metric_set(mn_log_loss),\n  grid = param_grid\n)\n\nshow_best(res_grid)\n\n# A tibble: 5 × 10\n   mtry trees tree_depth sample_size .metric .esti…¹  mean     n std_err .config\n  <dbl> <dbl>      <dbl>       <dbl> <chr>   <chr>   <dbl> <int>   <dbl> <chr>  \n1   0.1  1000          6         0.1 mn_log… multic… 0.900     1      NA Prepro…\n2   0.1   900          6         0.1 mn_log… multic… 0.900     1      NA Prepro…\n3   0.1   700          6         0.1 mn_log… multic… 0.900     1      NA Prepro…\n4   0.1   800          6         0.1 mn_log… multic… 0.900     1      NA Prepro…\n5   0.1  1000          4         0.1 mn_log… multic… 0.900     1      NA Prepro…\n# … with abbreviated variable name ¹​.estimator"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#fit-final-model",
    "href": "posts/2022-12-20-bipoisson/index.html#fit-final-model",
    "title": "Predição de resultados de futebol - Parte 1",
    "section": "Fit Final Model",
    "text": "Fit Final Model\n\nset.seed(32)\n\nbest_config <- select_best(res_grid)\n\nwflow <- wflow %>%\n  finalize_workflow(best_config)\n\nwflow <- fit(wflow, train_full)\nwc2022_matches <- test %>%\n  filter(date > as.Date(\"2022-01-01\"), tournament == \"FIFA World Cup\")\n\npred <- predict(object = wflow, wc2022_matches)\npred_probs <- predict(object = wflow, wc2022_matches, type = \"prob\")\n\nbind_cols(wc2022_matches, pred, pred_probs) %>%\n  accuracy(\n    truth = target,\n    estimate = .pred_class\n  )\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  <chr>    <chr>          <dbl>\n1 accuracy multiclass     0.531\n\n\n\nbind_cols(wc2022_matches, pred, pred_probs) %>%\n  select(date, home_team, away_team, target, contains(\".pred\")) %>%\n  mutate(correct = target == .pred_class) %>%\n  knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndate\nhome_team\naway_team\ntarget\n.pred_class\n.pred_home\n.pred_draw\n.pred_away\ncorrect\n\n\n\n\n2022-11-20\nQatar\nEcuador\naway\nhome\n0.4310823\n0.2745520\n0.2943657\nFALSE\n\n\n2022-11-21\nSenegal\nNetherlands\naway\naway\n0.1793220\n0.1702988\n0.6503792\nTRUE\n\n\n2022-11-21\nEngland\nIran\nhome\nhome\n0.4419850\n0.3223231\n0.2356918\nTRUE\n\n\n2022-11-21\nUnited States\nWales\ndraw\nhome\n0.4700064\n0.2579292\n0.2720645\nFALSE\n\n\n2022-11-22\nArgentina\nSaudi Arabia\naway\nhome\n0.7094082\n0.1754999\n0.1150920\nFALSE\n\n\n2022-11-22\nMexico\nPoland\ndraw\nhome\n0.4418692\n0.2744693\n0.2836615\nFALSE\n\n\n2022-11-22\nDenmark\nTunisia\ndraw\nhome\n0.6261779\n0.2317065\n0.1421157\nFALSE\n\n\n2022-11-22\nFrance\nAustralia\nhome\nhome\n0.6310226\n0.1940395\n0.1749379\nTRUE\n\n\n2022-11-23\nGermany\nJapan\naway\nhome\n0.5536771\n0.2029826\n0.2433403\nFALSE\n\n\n2022-11-23\nSpain\nCosta Rica\nhome\nhome\n0.7078843\n0.1527469\n0.1393689\nTRUE\n\n\n2022-11-23\nMorocco\nCroatia\ndraw\naway\n0.2955139\n0.2543549\n0.4501313\nFALSE\n\n\n2022-11-23\nBelgium\nCanada\nhome\nhome\n0.6211175\n0.1730603\n0.2058222\nTRUE\n\n\n2022-11-24\nSwitzerland\nCameroon\nhome\nhome\n0.5491011\n0.2575750\n0.1933239\nTRUE\n\n\n2022-11-24\nBrazil\nSerbia\nhome\nhome\n0.7349171\n0.1319857\n0.1330972\nTRUE\n\n\n2022-11-24\nUruguay\nSouth Korea\ndraw\nhome\n0.3973462\n0.3712340\n0.2314198\nFALSE\n\n\n2022-11-24\nPortugal\nGhana\nhome\nhome\n0.7045217\n0.1491760\n0.1463023\nTRUE\n\n\n2022-11-25\nQatar\nSenegal\naway\naway\n0.3433381\n0.2712964\n0.3853655\nTRUE\n\n\n2022-11-25\nNetherlands\nEcuador\ndraw\nhome\n0.6636072\n0.2113182\n0.1250745\nFALSE\n\n\n2022-11-25\nWales\nIran\naway\naway\n0.2218286\n0.2532843\n0.5248871\nTRUE\n\n\n2022-11-25\nEngland\nUnited States\ndraw\nhome\n0.6379013\n0.2101282\n0.1519705\nFALSE\n\n\n2022-11-26\nPoland\nSaudi Arabia\nhome\nhome\n0.4914292\n0.2835209\n0.2250499\nTRUE\n\n\n2022-11-26\nArgentina\nMexico\nhome\nhome\n0.6279036\n0.2106612\n0.1614352\nTRUE\n\n\n2022-11-26\nTunisia\nAustralia\naway\naway\n0.3594266\n0.2316107\n0.4089628\nTRUE\n\n\n2022-11-26\nFrance\nDenmark\nhome\nhome\n0.5032890\n0.2216918\n0.2750192\nTRUE\n\n\n2022-11-27\nJapan\nCosta Rica\naway\nhome\n0.5021156\n0.2840079\n0.2138765\nFALSE\n\n\n2022-11-27\nSpain\nGermany\ndraw\nhome\n0.5130638\n0.1619865\n0.3249497\nFALSE\n\n\n2022-11-27\nBelgium\nMorocco\naway\nhome\n0.5285866\n0.2673819\n0.2040315\nFALSE\n\n\n2022-11-27\nCroatia\nCanada\nhome\nhome\n0.5295668\n0.2801163\n0.1903169\nTRUE\n\n\n2022-11-28\nCameroon\nSerbia\ndraw\naway\n0.2707981\n0.2041036\n0.5250983\nFALSE\n\n\n2022-11-28\nBrazil\nSwitzerland\nhome\nhome\n0.6226013\n0.2182976\n0.1591011\nTRUE\n\n\n2022-11-28\nSouth Korea\nGhana\naway\nhome\n0.6040497\n0.2242025\n0.1717478\nFALSE\n\n\n2022-11-28\nPortugal\nUruguay\nhome\nhome\n0.5028577\n0.2429746\n0.2541676\nTRUE\n\n\n2022-11-29\nEcuador\nSenegal\naway\nhome\n0.4441753\n0.3047349\n0.2510898\nFALSE\n\n\n2022-11-29\nQatar\nNetherlands\naway\naway\n0.1575620\n0.1685282\n0.6739099\nTRUE\n\n\n2022-11-29\nWales\nEngland\naway\naway\n0.1057994\n0.1623531\n0.7318475\nTRUE\n\n\n2022-11-29\nIran\nUnited States\naway\nhome\n0.4985331\n0.2720620\n0.2294049\nFALSE\n\n\n2022-11-30\nPoland\nArgentina\naway\naway\n0.2304773\n0.2189028\n0.5506199\nTRUE\n\n\n2022-11-30\nSaudi Arabia\nMexico\naway\naway\n0.2771191\n0.2416616\n0.4812193\nTRUE\n\n\n2022-11-30\nAustralia\nDenmark\nhome\naway\n0.2725746\n0.2392350\n0.4881903\nFALSE\n\n\n2022-11-30\nTunisia\nFrance\nhome\naway\n0.1706421\n0.2261163\n0.6032416\nFALSE\n\n\n2022-12-01\nJapan\nSpain\nhome\naway\n0.1738116\n0.2886364\n0.5375520\nFALSE\n\n\n2022-12-01\nCosta Rica\nGermany\naway\naway\n0.2088879\n0.2083778\n0.5827343\nTRUE\n\n\n2022-12-01\nCroatia\nBelgium\ndraw\nhome\n0.3617373\n0.2977371\n0.3405257\nFALSE\n\n\n2022-12-01\nCanada\nMorocco\naway\naway\n0.2550098\n0.2989705\n0.4460197\nTRUE\n\n\n2022-12-02\nSerbia\nSwitzerland\naway\naway\n0.2963481\n0.2716211\n0.4320308\nTRUE\n\n\n2022-12-02\nCameroon\nBrazil\nhome\naway\n0.1219967\n0.1503555\n0.7276478\nFALSE\n\n\n2022-12-02\nGhana\nUruguay\naway\naway\n0.1900392\n0.2384322\n0.5715286\nTRUE\n\n\n2022-12-02\nSouth Korea\nPortugal\nhome\naway\n0.2144913\n0.2769087\n0.5086000\nFALSE\n\n\n2022-12-03\nNetherlands\nUnited States\nhome\nhome\n0.6390219\n0.2094897\n0.1514884\nTRUE\n\n\n2022-12-03\nArgentina\nAustralia\nhome\nhome\n0.6573026\n0.1878852\n0.1548122\nTRUE\n\n\n2022-12-04\nFrance\nPoland\nhome\nhome\n0.5707348\n0.2106941\n0.2185710\nTRUE\n\n\n2022-12-04\nEngland\nSenegal\nhome\nhome\n0.5697314\n0.2478583\n0.1824103\nTRUE\n\n\n2022-12-05\nJapan\nCroatia\ndraw\naway\n0.2919517\n0.3078877\n0.4001607\nFALSE\n\n\n2022-12-05\nBrazil\nSouth Korea\nhome\nhome\n0.6207804\n0.2112239\n0.1679957\nTRUE\n\n\n2022-12-06\nMorocco\nSpain\ndraw\naway\n0.2503555\n0.2840146\n0.4656299\nFALSE\n\n\n2022-12-06\nPortugal\nSwitzerland\nhome\nhome\n0.4744534\n0.2872891\n0.2382575\nTRUE\n\n\n2022-12-09\nCroatia\nBrazil\ndraw\naway\n0.2005459\n0.2440647\n0.5553893\nFALSE\n\n\n2022-12-09\nNetherlands\nArgentina\ndraw\nhome\n0.3967020\n0.2356995\n0.3675985\nFALSE\n\n\n2022-12-10\nMorocco\nPortugal\nhome\naway\n0.2922557\n0.2504336\n0.4573107\nFALSE\n\n\n2022-12-10\nEngland\nFrance\naway\naway\n0.3601229\n0.2595121\n0.3803650\nTRUE\n\n\n2022-12-13\nArgentina\nCroatia\nhome\nhome\n0.5383014\n0.2662065\n0.1954920\nTRUE\n\n\n2022-12-14\nFrance\nMorocco\nhome\nhome\n0.5309887\n0.3032172\n0.1657942\nTRUE\n\n\n2022-12-17\nCroatia\nMorocco\nhome\ndraw\n0.3778026\n0.3966415\n0.2255559\nFALSE\n\n\n2022-12-18\nArgentina\nFrance\ndraw\nhome\n0.4396670\n0.2425500\n0.3177829\nFALSE"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#validação",
    "href": "posts/2022-12-20-bipoisson/index.html#validação",
    "title": "Predições de Resultados de Futebol",
    "section": "Validação",
    "text": "Validação\n\nfit1 <- glm(team1_score ~ team1_elo + team2_elo + neutral, data = train, family = \"poisson\")\nsummary(fit1)\n\n\nCall:\nglm(formula = team1_score ~ team1_elo + team2_elo + neutral, \n    family = \"poisson\", data = train)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-3.1873  -1.1104  -0.2373   0.5344  10.4309  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  1.509e+00  5.096e-02  29.601  < 2e-16 ***\nteam1_elo    2.031e-03  3.971e-05  51.136  < 2e-16 ***\nteam2_elo   -2.967e-03  3.911e-05 -75.865  < 2e-16 ***\nneutralTRUE -8.510e-02  1.072e-02  -7.942 1.98e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 46656  on 27579  degrees of freedom\nResidual deviance: 39895  on 27576  degrees of freedom\nAIC: 94768\n\nNumber of Fisher Scoring iterations: 5\n\npred1 <- predict(fit1, valid, type = \"response\")\n\nfit2 <- glm(team2_score ~ team1_elo + team2_elo + neutral, data = train, family = \"poisson\")\nsummary(fit2)\n\n\nCall:\nglm(formula = team2_score ~ team1_elo + team2_elo + neutral, \n    family = \"poisson\", data = train)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.8560  -1.2868  -0.2057   0.5046   8.2971  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  7.282e-01  6.273e-02   11.61   <2e-16 ***\nteam1_elo   -2.925e-03  4.768e-05  -61.34   <2e-16 ***\nteam2_elo    2.273e-03  4.951e-05   45.92   <2e-16 ***\nneutralTRUE  2.898e-01  1.230e-02   23.57   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 42429  on 27579  degrees of freedom\nResidual deviance: 37430  on 27576  degrees of freedom\nAIC: 79843\n\nNumber of Fisher Scoring iterations: 5\n\npred2 <- predict(fit2, valid, type = \"response\")\n\n\npreds <- map_df(seq_len(nrow(valid)), ~{\n  lambda1 <- pred1[.x]\n  lambda2 <- pred2[.x]\n\n  prob1 <- dpois(0:10, lambda1)\n  prob2 <- dpois(0:10, lambda2)\n  probs <- outer(prob1, prob2)\n  probs <- probs / sum(probs)\n\n  prob_team1 <- sum(lower.tri(probs) * probs)\n  prob_team2 <- sum(upper.tri(probs) * probs)\n  prob_draw <- sum(diag(probs))\n\n  data.frame(\n    .pred_team1 = prob_team1,\n    .pred_draw = prob_draw,\n    .pred_team2 = prob_team2\n  )\n})\n\n\nvalid |>\n  bind_cols(preds) |>\n  mutate(\n    target = case_when(\n      team1_score > team2_score ~ \"team1\",\n      team1_score == team2_score ~ \"draw\",\n      team1_score < team2_score ~ \"team2\"\n    ),\n    target = factor(target, c(\"team1\", \"draw\", \"team2\"))\n  ) |>\n  mn_log_loss(\n    truth = target,\n    estimate = contains(\"pred\")\n  )\n\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 mn_log_loss multiclass     0.911"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#teste",
    "href": "posts/2022-12-20-bipoisson/index.html#teste",
    "title": "Predições de Resultados de Futebol",
    "section": "Teste",
    "text": "Teste\n\nfit1 <- glm(team1_score ~ team1_elo + team2_elo + neutral, data = train_full, family = \"poisson\")\nsummary(fit1)\n\n\nCall:\nglm(formula = team1_score ~ team1_elo + team2_elo + neutral, \n    family = \"poisson\", data = train_full)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-3.3123  -1.1426  -0.2357   0.5326  10.5104  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  1.448e+00  4.271e-02  33.913  < 2e-16 ***\nteam1_elo    1.989e-03  3.394e-05  58.599  < 2e-16 ***\nteam2_elo   -2.893e-03  3.351e-05 -86.319  < 2e-16 ***\nneutralTRUE -7.496e-02  9.571e-03  -7.832 4.79e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 58034  on 34475  degrees of freedom\nResidual deviance: 49451  on 34472  degrees of freedom\nAIC: 117216\n\nNumber of Fisher Scoring iterations: 5\n\npred1 <- predict(fit1, test, type = \"response\")\n\nfit2 <- glm(team2_score ~ team1_elo + team2_elo + neutral, data = train_full, family = \"poisson\")\nsummary(fit2)\n\n\nCall:\nglm(formula = team2_score ~ team1_elo + team2_elo + neutral, \n    family = \"poisson\", data = train_full)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.8221  -1.2718  -0.2035   0.4967   8.3455  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  5.932e-01  5.231e-02   11.34   <2e-16 ***\nteam1_elo   -2.864e-03  4.078e-05  -70.23   <2e-16 ***\nteam2_elo    2.319e-03  4.193e-05   55.31   <2e-16 ***\nneutralTRUE  3.028e-01  1.097e-02   27.61   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 52760  on 34475  degrees of freedom\nResidual deviance: 46153  on 34472  degrees of freedom\nAIC: 98597\n\nNumber of Fisher Scoring iterations: 5\n\npred2 <- predict(fit2, test, type = \"response\")\n\n\npreds <- map_df(seq_len(nrow(test)), ~{\n  lambda1 <- pred1[.x]\n  lambda2 <- pred2[.x]\n\n  prob1 <- dpois(0:10, lambda1)\n  prob2 <- dpois(0:10, lambda2)\n  probs <- outer(prob1, prob2)\n  probs <- probs / sum(probs)\n\n  prob_team1 <- sum(lower.tri(probs) * probs)\n  prob_team2 <- sum(upper.tri(probs) * probs)\n  prob_draw <- sum(diag(probs))\n\n  data.frame(\n    .pred_team1 = prob_team1,\n    .pred_draw = prob_draw,\n    .pred_team2 = prob_team2\n  )\n})\n\n\ntest |>\n  bind_cols(preds) |>\n  mutate(\n    target = case_when(\n      team1_score > team2_score ~ \"team1\",\n      team1_score == team2_score ~ \"draw\",\n      team1_score < team2_score ~ \"team2\"\n    ),\n    target = factor(target, c(\"team1\", \"draw\", \"team2\"))\n  ) |>\n  mn_log_loss(\n    truth = target,\n    estimate = contains(\"pred\")\n  )\n\n# A tibble: 1 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 mn_log_loss multiclass     0.902\n\n\n\ntest |>\n  bind_cols(preds) |>\n  mutate(\n    target = case_when(\n      team1_score > team2_score ~ \"team1\",\n      team1_score == team2_score ~ \"draw\",\n      team1_score < team2_score ~ \"team2\"\n    ),\n    target = factor(target, c(\"team1\", \"draw\", \"team2\")),\n    pred_class = case_when(\n      .pred_team1 == pmax(.pred_team1, .pred_team2, .pred_draw) ~ \"team1\",\n      .pred_draw == pmax(.pred_team1, .pred_team2, .pred_draw) ~ \"draw\",\n      .pred_team2 == pmax(.pred_team1, .pred_team2, .pred_draw) ~ \"team2\"\n    ),\n    pred_class = factor(pred_class, c(\"team1\", \"draw\", \"team2\"))\n  ) |>\n  filter(date >= as.Date(\"2022-01-01\"), tournament == \"FIFA World Cup\") |>\n  # select(date, team1, team2, target, pred_class)\n  accuracy(\n    truth = target,\n    estimate = pred_class\n  )\n\n# A tibble: 1 × 3\n  .metric  .estimator .estimate\n  <chr>    <chr>          <dbl>\n1 accuracy multiclass     0.531\n\n  # mn_log_loss(\n  #   truth = target,\n  #   estimate = contains(\"pred\")\n  # )"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#pacotes",
    "href": "posts/2022-12-20-bipoisson/index.html#pacotes",
    "title": "Predições de Resultados de Futebol",
    "section": "Pacotes",
    "text": "Pacotes\nOs pacotes utilizados estão listados abaixo.\n\nlibrary(EloRating)\nlibrary(tidymodels)\nlibrary(tidyverse)\n\n# Tema para os gráficos\ntheme_set(theme_bw())"
  },
  {
    "objectID": "posts/2022-12-20-bipoisson/index.html#resultados",
    "href": "posts/2022-12-20-bipoisson/index.html#resultados",
    "title": "Predições de Resultados de Futebol",
    "section": "Resultados",
    "text": "Resultados\nNeste primeiro bloco de código, os modelos para os times 1 e 2 são estimados usando a função glm() com a opção family = poisson.\n\nfit1 <- glm(\n  formula = team1_score ~ team1_elo + team2_elo + neutral,\n  data = train,\n  family = \"poisson\"\n)\n\nsummary(fit1)\n\npred1 <- predict(fit1, test, type = \"response\")\n\nfit2 <- glm(\n  formula = team2_score ~ team1_elo + team2_elo + neutral,\n  data = train,\n  family = \"poisson\"\n)\nsummary(fit2)\n\npred2 <- predict(fit2, test, type = \"response\")\n\n\nCall:\nglm(formula = team1_score ~ team1_elo + team2_elo + neutral, \n    family = \"poisson\", data = train)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-3.3123  -1.1426  -0.2357   0.5326  10.5104  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  1.448e+00  4.271e-02  33.913  < 2e-16 ***\nteam1_elo    1.989e-03  3.394e-05  58.599  < 2e-16 ***\nteam2_elo   -2.893e-03  3.351e-05 -86.319  < 2e-16 ***\nneutralTRUE -7.496e-02  9.571e-03  -7.832 4.79e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 58034  on 34475  degrees of freedom\nResidual deviance: 49451  on 34472  degrees of freedom\nAIC: 117216\n\nNumber of Fisher Scoring iterations: 5\n\n\nCall:\nglm(formula = team2_score ~ team1_elo + team2_elo + neutral, \n    family = \"poisson\", data = train)\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-2.8221  -1.2718  -0.2035   0.4967   8.3455  \n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  5.932e-01  5.231e-02   11.34   <2e-16 ***\nteam1_elo   -2.864e-03  4.078e-05  -70.23   <2e-16 ***\nteam2_elo    2.319e-03  4.193e-05   55.31   <2e-16 ***\nneutralTRUE  3.028e-01  1.097e-02   27.61   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 52760  on 34475  degrees of freedom\nResidual deviance: 46153  on 34472  degrees of freedom\nAIC: 98597\n\nNumber of Fisher Scoring iterations: 5\n\n\nNeste segundo bloco, são computadas as probabilidades de vitória do time 1, empate e vitória do time 2. Para isso, são utilizadas as predições anteriores como o parâmetro (\\(\\lambda\\)) da distribuição de Poisson e são calculadas as probabilidades de cada time marcar 0 a 10 gols. Multiplicando as probabilidades são obtidas as probabilidades de cada placar possível. Por último, a probabilidade do time 1 ganhar é calculada como a soma das probabilidades dos placares nos quais o time 1 marca mais gols que o time2. As probabilidades de empate e vitória do time 2 são calculadas de forma similar.\n\npreds <- map_df(seq_len(nrow(test)), ~{\n  lambda1 <- pred1[.x]\n  lambda2 <- pred2[.x]\n\n  prob1 <- dpois(0:10, lambda1)\n  prob2 <- dpois(0:10, lambda2)\n  probs <- outer(prob1, prob2)\n  probs <- probs / sum(probs)\n\n  prob_team1 <- sum(lower.tri(probs) * probs)\n  prob_team2 <- sum(upper.tri(probs) * probs)\n  prob_draw <- sum(diag(probs))\n\n  data.frame(\n    .pred_team1 = prob_team1,\n    .pred_draw = prob_draw,\n    .pred_team2 = prob_team2\n  )\n})\n\nO código abaixo computa algumas métricas (log-loss e acurácia) para a base de testes.\n\n# Junta as predições aos dados de teste, cria a variável de target e a predição\n# por classe.\ntest <- test |>\n  bind_cols(preds) |>\n  mutate(\n    target = case_when(\n      team1_score > team2_score ~ \"team1\",\n      team1_score == team2_score ~ \"draw\",\n      team1_score < team2_score ~ \"team2\"\n    ),\n    target = factor(target, c(\"team1\", \"draw\", \"team2\")),\n    # predição por classe\n    pred_class = case_when(\n      .pred_team1 == pmax(.pred_team1, .pred_team2, .pred_draw) ~ \"team1\",\n      .pred_draw == pmax(.pred_team1, .pred_team2, .pred_draw) ~ \"draw\",\n      .pred_team2 == pmax(.pred_team1, .pred_team2, .pred_draw) ~ \"team2\"\n    ),\n    pred_class = factor(pred_class, c(\"team1\", \"draw\", \"team2\"))\n  )\n\nscore_acc <- accuracy(\n  data = test,\n  truth = target,\n  estimate = pred_class\n)\n\nscore_ll <- mn_log_loss(\n  data = test,\n  truth = target,\n  estimate = contains(\".pred\")\n)\n\nbind_rows(score_acc, score_ll)\n\n# A tibble: 2 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 accuracy    multiclass     0.584\n2 mn_log_loss multiclass     0.902\n\n\nE qual é o desempenho do modelo para as partidas da Copa do Mundo de 2022?\n\nscore_acc_wc2022 <- accuracy(\n  data = test |>\n  filter(date >= as.Date(\"2022-01-01\"), tournament == \"FIFA World Cup\"),\n  truth = target,\n  estimate = pred_class\n)\n\nscore_ll_wc2022 <- mn_log_loss(\n  data = test |>\n  filter(date >= as.Date(\"2022-01-01\"), tournament == \"FIFA World Cup\"),\n  truth = target,\n  estimate = contains(\".pred\")\n)\n\nbind_rows(score_acc_wc2022, score_ll_wc2022)\n\n# A tibble: 2 × 3\n  .metric     .estimator .estimate\n  <chr>       <chr>          <dbl>\n1 accuracy    multiclass     0.531\n2 mn_log_loss multiclass     1.03 \n\n\nVerifica-se uma acurácia de 53,1% e log-loss de 1.03. Estes resultados indicam uma acurácia menor do que aquela obtida para o conjunto total de teste. Por fim, para dar uma sensibilidade da qualidade dos resultados obtidos por esse modelo, deixo aqui uma comparação realizada pelo Octosport:\n\nThe FIFA world cup has just ended. It is time to share our model performance over the 64 games. We reached an accuracy of 56.2% and a log-loss of -0.982 on the final-time winner prediction (90 minutes).For comparison, famous 538 did 53.1% with a log-loss of -1.031 while kickoff.ai did 54.6% and -1.028."
  },
  {
    "objectID": "index.html#olá",
    "href": "index.html#olá",
    "title": "Paulo Oliveira",
    "section": "Olá,",
    "text": "Olá,\nEu sou o Paulo. Minha formação é em economia. Minha área de interesse é análise de dados em geral, como simulação com base em modelos econômicos, econometria e aprendizado de máquina."
  },
  {
    "objectID": "index.html#olá-1",
    "href": "index.html#olá-1",
    "title": "Olá,",
    "section": "Olá,",
    "text": "Olá,\nEu sou o Paulo. Minha formação é em economia. Minha área de interesse é análise de dados em geral, como simulação com base em modelos econômicos, econometria e aprendizado de máquina."
  }
]